name: CI/CD Pipeline

on:
  push:
    branches: [ master, main ]
  pull_request:
    branches: [ master, main ]

jobs:
  build:
    name: Build and Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'

      - name: Cache Maven local repository
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Build (package)
        run: mvn -B clean package

      - name: Run tests
        run: mvn test

      - name: Upload built jar artifact
        uses: actions/upload-artifact@v4
        with:
          name: app-jar
          path: target/*.jar

  minikube-deploy:
    name: Minikube Deploy
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download built artifact
        uses: actions/download-artifact@v4
        with:
          name: app-jar
          path: .

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Set up QEMU (for multi-arch)
        uses: docker/setup-qemu-action@v2

      - name: Build Docker image
        run: |
          IMAGE_NAME=ai-copilot-app:${{ github.sha }}
          echo "IMAGE_NAME=$IMAGE_NAME" >> $GITHUB_ENV
          docker build -t $IMAGE_NAME .

      - name: Set up Minikube
        uses: manusa/setup-minikube@v2.2.0
        with:
          kubernetes-version: 'v1.26.0'
          driver: docker
          memory: 4096

      - name: Use kubectl context for minikube
        run: |
          kubectl version --client
          kubectl config current-context || true

      - name: Load image into Minikube
        run: |
          # load the locally-built image into minikube so k8s can use it
          minikube image load $IMAGE_NAME

      - name: Apply Kubernetes manifests
        run: |
          # expects k8s manifests under k8s/ (Deployment, Service, etc.)
          if [ -d "k8s" ]; then
            kubectl apply -f k8s/
          else
            echo "No k8s/ directory found; skipping manifest apply"
          fi

      - name: Wait for deployment rollout (if a deployment named 'my-app' exists)
        run: |
          kubectl rollout status deployment/my-app --timeout=120s || true

  k8s-verify:
    name: K8s Verify
    runs-on: ubuntu-latest
    needs: minikube-deploy
    steps:
      - name: Show pods
        run: kubectl get pods -o wide --show-labels
